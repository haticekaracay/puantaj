
import Connection.DatabaseConnection;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author haticeozbakir
 */
public class puantj extends javax.swing.JFrame {

    public class ExcelOlustur {

        void fillData(JTable table, File file) {

            try {

                WritableWorkbook calismakitabi1 = Workbook.createWorkbook(file);
                WritableSheet yaprak1 = calismakitabi1.createSheet("KAPSAMİÇİ", 0);
                TableModel model = table.getModel();
                //TableModel model2=table2.getModel();
                // TableModel model3=table3.getModel();

                for (int i = 0; i < model.getColumnCount(); i++) {//sütun için..
                    Label column = new Label(i, 0, model.getColumnName(i));
                    yaprak1.addCell(column);
                }
                int j = 0;
                for (int i = 0; i < model.getRowCount(); i++) {//satır için..
                    for (j = 0; j < model.getColumnCount(); j++) {
                        Label row = new Label(j, i + 1, model.getValueAt(i, j).toString());
                        yaprak1.addCell(row);
                    }
                }

                calismakitabi1.write();
                calismakitabi1.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }
    DefaultTableModel dtm = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();

    public yöneticiEkranı parentT;

    public puantj() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        geri = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        tarih = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PUANTAJ");
        setBackground(new java.awt.Color(255, 255, 255));

        geri.setBackground(new java.awt.Color(0, 102, 102));
        geri.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        geri.setForeground(new java.awt.Color(255, 255, 255));
        geri.setText("←");
        geri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriActionPerformed(evt);
            }
        });

        jCheckBox1.setText("KAPSAMİÇİ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("KAPSAMDIŞI");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("YAZDIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ekran Görüntüsü (49).png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bolge.png"))); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        tarih.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("ÇALIŞILAN GÜNLER");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ekran Görüntüsü (48).png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DE.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(315, 315, 315)
                                .addComponent(tarih, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(292, 292, 292)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(139, 139, 139))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(77, 77, 77)
                            .addComponent(tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel4)
                            .addGap(22, 22, 22)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(geri, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 717, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(669, 669, 669))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(geri))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addContainerGap(1072, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void geriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geriActionPerformed
        yöneticiEkranı yön = new yöneticiEkranı();
        yön.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_geriActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        jCheckBox2.setSelected(false);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTable1.setShowGrid(true);//çizgilerrrr..
        jTable2.setShowGrid(true);
        jTable3.setShowGrid(true);//çizgilerrrr..
        Connection con = DatabaseConnection.connectDatabase();
        jTable3.setModel(dtm2);
        dtm2.setColumnIdentifiers(new String[]{"FİİLEN ÇALIŞILAN GÜN SAYISI", "ÇALIŞILMIŞ GİBİ SAYILAN GÜN SAYISI",
            "TOPLAM GÜN SAYISI", "ÜCRETLİ MAZERET İZNİ", "ÜCRETSİZ MAZERET İZNİ", "SIHHİ İZİNLİ GÜN SAYISI", "SENELİK İZİN GÜN SAYISI",
            "YEMEK ÜCRETİ GÜNÜ", "VASITA GÜN SAYISI", "İLAVE YEMEK ÜCRETİ GÜN SAYISI", "AĞIR VASITA GÜN SAYISI", "K.M. PRİMİ",
            "GÖREV/EĞİTİM GÜN SAYISI", "& GÜN 45 SAAT ÇALIŞMASI", "VARDİYA PRİMİ", "GÜNLÜK FAZLA ÇALIŞMA", "HAFTA SONU FAZLA ÇALIŞMA",
            "BAYRAM GÜNÜ ÇALIŞMASI (%100)", "GENEL TATİL ÇALIŞMASI (%50)", "GÜNÜBİR.GEÇ.GÖR.HAR.GÜN SAYISI"});
        String kid = null;
        if (jCheckBox1.isSelected()) {
            jCheckBox1.setSelected(true);
            kid = "K/İ";
        }
        if (jCheckBox2.isSelected()) {
            jCheckBox2.setSelected(true);
            kid = "K/D";
        }
        String perSor = "select sirano AS \"NO\", sicil AS \"SİCİLİ\", adsoyad AS \"ADI SOYADI\",unvan AS \"ÜNVANI\",statu AS \"STATÜSÜ\" from personel where statu='" + kid + "'order by sicil asc ";
        DefaultTableModel dm = (DefaultTableModel) jTable3.getModel();
        jTable3.getTableHeader().setUI(null);
        Font f2 = new Font("Tahoma", Font.BOLD, 10);
        jTable2.getTableHeader().setFont(f2);
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
        try {
            Statement stPer = con.createStatement();
            ResultSet rs = stPer.executeQuery(perSor);
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(35);//sütun genişliği..
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(161);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(76);
            // jTable2.getTableHeader().setBackground(Color.white);
            jTable2.getTableHeader().setPreferredSize(new Dimension(186, 186)); //başlık satır genişliği..
            jTable1.getTableHeader().setPreferredSize(new Dimension(100, 100));
            jTable1.getTableHeader().setBackground(Color.red);
            jTable2.getTableHeader().setBackground(Color.white);
            //jTable3.getTableHeader().setPreferredSize(new Dimension(100, 100));
        } catch (SQLException ex) {
            Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(dtm);
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String date1 = dateFormat.format(jDateChooser1.getDate());
        SimpleDateFormat dFormat = new SimpleDateFormat("dd");
        String date = dFormat.format(jDateChooser1.getDate());
        int gun1 = Integer.parseInt(date);
        SimpleDateFormat dFormatt = new SimpleDateFormat("MM");
        String date2 = dFormatt.format(jDateChooser1.getDate());
        int ay = Integer.parseInt(date2);
        SimpleDateFormat dFormat3 = new SimpleDateFormat("yyyy");
        String date3 = dFormat3.format(jDateChooser1.getDate());
        int yil = Integer.parseInt(date3);
        if (gun1 != 1) {
            JOptionPane.showMessageDialog(parentT, "Ayın ilk gününü seçiniz..");
        } else {
            try{
               Statement st=con.createStatement();
               ResultSet rs3 = st.executeQuery("select sicil from gecicitakvim order by sicil asc");
              if (rs3.next()) {
                            st.executeUpdate("delete from gecicitakvim");
                        }
            }catch(SQLException ex){}
            if (ay == 2) {
                if (yil % 4 == 0) {
                    tarih.setText(date1 + "/29-02-" + date3);
                } else {
                    tarih.setText(date1 + "/28-02-" + date3);
                }
                try {
                    Date dt = dateFormat.parse(date1);
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(dt);
                    Statement st = con.createStatement(), st1 = con.createStatement(), st2 = con.createStatement();
                    int day = calendar.get(Calendar.DAY_OF_WEEK);
                    if (day == 1) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT')");
                            }

                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT')");
                            }
                        }
                    }
                    if (day == 2) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT')");
                            }
                        }
                    }
                    if (day == 3) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X')");
                            }
                        }
                    }
                    if (day == 4) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X')");
                            }
                        }
                    }
                    if (day == 5) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X')");
                            }
                        }
                    }
                    if (day == 6) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X')");
                            }
                        }
                    }
                    if (day == 7) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        if (yil % 4 == 0) {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT')");
                            }
                        } else {
                            while (rs.next()) {
                                int scl = rs.getInt("sicil");
                                st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X')");
                            }
                        }
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (ay == 4 || ay == 6 || ay == 9 || ay == 11) {
                tarih.setText(date1 + "/30-" + date2 + "-" + date3);
                try {
                    Statement st = con.createStatement(), st1 = con.createStatement(), st2 = con.createStatement();
                    Date dt = dateFormat.parse(date1);
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(dt);
                    int day = calendar.get(Calendar.DAY_OF_WEEK);
                    if (day == 1) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X')");
                        }
                        System.out.println("pazar");
                    }
                    if (day == 2) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X')");
                        }
                    }
                    if (day == 3) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X')");
                        }
                    }
                    if (day == 4) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X')");
                        }
                    }
                    if (day == 5) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X')");
                        }
                    }
                    if (day == 6) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT')");
                        }
                    }
                    if (day == 7) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT')");
                        }
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (ay == 1 || ay == 3 || ay == 5 || ay == 7 || ay == 8 || ay == 10 || ay == 12) {
                tarih.setText(date1 + "/31-" + date2 + "-" + date3);
                try {
                    Date dt = dateFormat.parse(date1);
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(dt);
                    Statement st = con.createStatement(), st1 = con.createStatement(), st2 = con.createStatement();
                    int day = calendar.get(Calendar.DAY_OF_WEEK);
                    if (day == 1) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X')");
                        }
                        System.out.println("pazar");
                    }
                    if (day == 2) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X')");
                        }
                    }
                    if (day == 3) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X')");
                        }
                    }
                    if (day == 4) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X')");
                        }
                    }
                    if (day == 5) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT')");
                        }
                    }
                    if (day == 6) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT')");
                        }
                    }
                    if (day == 7) {
                        ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
                        while (rs.next()) {
                            int scl = rs.getInt("sicil");
                            st2.executeUpdate("insert into gecicitakvim values(" + scl + ",'HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X','X','X','X','X','HT','HT','X')");
                        }
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(puantj.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                Statement st = con.createStatement();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            jTable1.setDefaultRenderer(Object.class, new CustomRenderer());
            jTable3.setDefaultRenderer(Object.class, new HeaderColor());
            Font f = new Font("Arial", Font.BOLD, 9); //tablo içerik yazı düzenleme..
            jTable1.getTableHeader().setFont(f);
        }
        try {
            Statement st1 = con.createStatement(), st3 = con.createStatement(), st4 = con.createStatement(), st5 = con.createStatement(), st6 = con.createStatement(), st7 = con.createStatement(),
                    st8 = con.createStatement(), st9 = con.createStatement(), st10 = con.createStatement(), st11 = con.createStatement(),
                    st12 = con.createStatement(), st13 = con.createStatement(), st14 = con.createStatement(), st15 = con.createStatement(),
                    st16 = con.createStatement(), st17 = con.createStatement(), st18 = con.createStatement(), st19 = con.createStatement(),
                    st20 = con.createStatement(), st21 = con.createStatement(), st22 = con.createStatement();
            //puantaj üzerinde işlemler (bslngc)
            ResultSet rs = st1.executeQuery("select sicil from personel where statu='" + kid + "' order by sicil asc ");
            while (rs.next()) {
                int scl = rs.getInt("sicil");
                ResultSet rs5 = st5.executeQuery("select sicil,gun,ay,yil,durum from arkadurum where sicil='" + scl + "'order by sicil asc");
                while (rs5.next()) {//izin varsa güncelleme alanı..
                    int arGun = rs5.getInt("gun");
                    int arAy = rs5.getInt("ay");
                    int arYil = rs5.getInt("yil");
                    String arDurum = rs5.getString("durum");

                    if (arAy == ay && arYil == yil) {
                        String s = "g" + arGun;
                        System.out.println(s);
                        st6.executeUpdate("update gecicitakvim set " + s + "='" + arDurum + "' where sicil= '" + scl + "'and " + s + "!='HT';");//şartlara göre güncelleme..
                    }
                }
                ResultSet rs6 = st7.executeQuery("select sicil,gun,ay,yil,durum from aegitimgorev where sicil='" + scl + "'order by sicil asc");
                while (rs6.next()) {//eğitim görev varsa güncelleme alanı..
                    int egGun = rs6.getInt("gun");
                    int egAy = rs6.getInt("ay");
                    int egYil = rs6.getInt("yil");
                    String egDurum = rs6.getString("durum");
                    if (egAy == ay && egYil == yil) {
                        String s = "g" + egGun;
                        System.out.println(s);
                        st8.executeUpdate("update gecicitakvim set " + s + "='" + egDurum + "' where sicil= '" + scl + "'");//şarta göre güncelleme(eğitim görevde ht sayılır)..
                    }
                }
                ResultSet rs18 = st21.executeQuery("select sicil,gun,ay,yil,durum from bgtatil where sicil='" + scl + "'order by sicil asc");
                while (rs18.next()) {//genel/bayram tatili..
                    int bgGun = rs18.getInt("gun");
                    int bgAy = rs18.getInt("ay");
                    int bgYil = rs18.getInt("yil");
                    String bgDurum = rs18.getString("durum");
                    if (bgAy == ay && bgYil == yil) {
                        String s = "g" + bgGun;
                        System.out.println(s);
                        st8.executeUpdate("update gecicitakvim set " + s + "='" + bgDurum + "' where sicil= '" + scl + "'");//şarta göre güncelleme(eğitim görevde ht sayılır)..
                    }
                }
                ResultSet rs7 = st9.executeQuery("select sicil,gun,ay,yil,durum from arkamesai where sicil='" + scl + "'order by sicil asc");
                while (rs7.next()) {//6 45 mesaisi ekleme..(GTC,BTC,HTC)
                    int mGun = rs7.getInt("gun");
                    int mAy = rs7.getInt("ay");
                    int mYil = rs7.getInt("yil");
                    String mDurum = rs7.getString("durum");
                    if (mAy == ay && mYil == yil) {
                        String s = "g" + mGun;
                        if (mDurum.equals("A")) {
                            st10.executeUpdate("update gecicitakvim set " + s + "='" + mDurum + "' where sicil= '" + scl + "'and " + s + "='HT';");//şarta göre güncelleme(6 gün 45 saat mesaisi)..
                        }
                        if (mDurum.equals("X")) {
                            st22.executeUpdate("update gecicitakvim set " + s + "='" + mDurum + "' where sicil= '" + scl + "'");
                        }
                    }
                }
                if (ay == 2 && yil % 4 == 0) {
                    ResultSet rs2 = st3.executeQuery("select g1 AS \"1\", g2 AS \"2\",g3 AS \"3\",g4 AS \"4\",g5 AS \"5\",g6 AS \"6\",g7 AS \"7\",g8 AS \"8\",g9 AS \"9\",g10 AS \"10\",\n"
                            + "g11 AS \"11\",g12 AS \"12\",g13 AS \"13\",g14 AS \"14\",g15 AS \"15\",g16 AS \"16\",g17 AS \"17\",g18 AS \"18\", g19 AS \"19\", \n"
                            + "g20 AS \"20\", g21 AS \"21\", g22 AS \"22\",g23 AS \"23\" ,g24 AS \"24\" ,g25 AS \"25\", g26 AS \"26\" ,g27 AS \"27\",\n"
                            + "g28 AS \"28\",g29 AS \"29\"  from gecicitakvim order by sicil asc");

                    jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
                } else if (ay == 2 && yil % 4 != 0) {
                    ResultSet rs2 = st3.executeQuery("select g1 AS \"1\", g2 AS \"2\",g3 AS \"3\",g4 AS \"4\",g5 AS \"5\",g6 AS \"6\",g7 AS \"7\",g8 AS \"8\",g9 AS \"9\",g10 AS \"10\","
                            + "g11 AS \"11\",g12 AS \"12\",g13 AS \"13\",g14 AS \"14\",g15 AS \"15\",g16 AS \"16\",g17 AS \"17\",g18 AS \"18\", g19 AS \"19\", g20 AS \"20\","
                            + " g21 AS \"21\", g22 AS \"22\",\n"
                            + "g23 AS \"23\" ,g24 AS \"24\" ,g25 AS \"25\", g26 AS \"26\" ,g27 AS \"27\",g28 AS \"28\"\n"
                            + "                        from gecicitakvim order by sicil asc");
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
                } else if (ay == 4 || ay == 6 || ay == 9 || ay == 11) {
                    ResultSet rs2 = st3.executeQuery("select g1 AS \"1\", g2 AS \"2\",g3 AS \"3\",g4 AS \"4\",g5 AS \"5\",g6 AS \"6\",g7 AS \"7\",g8 AS \"8\",g9 AS \"9\",g10 AS \"10\",\n"
                            + "g11 AS \"11\",g12 AS \"12\",g13 AS \"13\",g14 AS \"14\",g15 AS \"15\",g16 AS \"16\",g17 AS \"17\",g18 AS \"18\", g19 AS \"19\", \n"
                            + "g20 AS \"20\", g21 AS \"21\", g22 AS \"22\",g23 AS \"23\" ,g24 AS \"24\" ,g25 AS \"25\", g26 AS \"26\" ,g27 AS \"27\",\n"
                            + "g28 AS \"28\",g29 AS \"29\",g30 AS \"30\" from gecicitakvim order by sicil asc");
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
                } else if (ay == 1 || ay == 3 || ay == 5 || ay == 7 || ay == 8 || ay == 10 || ay == 12) {
                    ResultSet rs2 = st3.executeQuery("select g1 AS \"1\", g2 AS \"2\",g3 AS \"3\",g4 AS \"4\",g5 AS \"5\",g6 AS \"6\",g7 AS \"7\",g8 AS \"8\",g9 AS \"9\",g10 AS \"10\",\n"
                            + "g11 AS \"11\",g12 AS \"12\",g13 AS \"13\",g14 AS \"14\",g15 AS \"15\",g16 AS \"16\",g17 AS \"17\",g18 AS \"18\", g19 AS \"19\", \n"
                            + "g20 AS \"20\", g21 AS \"21\", g22 AS \"22\",g23 AS \"23\" ,g24 AS \"24\" ,g25 AS \"25\", g26 AS \"26\" ,g27 AS \"27\",\n"
                            + "g28 AS \"28\",g29 AS \"29\",g30 AS \"30\",g31 AS\"31\" from gecicitakvim order by sicil asc");
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs2));
                }
                //mesainin 6 45 olmama durumu(başlangıç)..tablonun son kısmı
                int sayac = 0, ücMazIz = 0, ücSMazIz = 0, sihhiIz = 0, yillikIz = 0, geg = 0, alti = 0;
                Double mS = 0.0, htFC = 0.0, bgC = 0.0, gtC = 0.0;
                ResultSet rs14 = st17.executeQuery("select sum(msure) AS \"saat\" from arkamesai where sicil='" + scl + "'and durum='GÜNLÜK FAZLA ÇALIŞMA' and(ay='" + ay + "'and yil='" + yil + "')");
                if (rs14.next()) {
                    mS = rs14.getDouble("saat");
                }
                ResultSet rs15 = st18.executeQuery("select sum(msure) AS \"saatHT\" from arkamesai where sicil='" + scl + "'and geneldurum='HAFTASONU FAZLA ÇALIŞMA'and(ay='" + ay + "'and yil='" + yil + "')");
                if (rs15.next()) {
                    htFC = rs15.getDouble("saatHT");
                }
                ResultSet rs16 = st19.executeQuery("select sum(msure) AS \"saatBG\" from arkamesai where sicil='" + scl + "'and geneldurum='BAYRAM GÜNÜ ÇALIŞMASI'and(ay='" + ay + "'and yil='" + yil + "')");
                if (rs16.next()) {
                    bgC = rs16.getDouble("saatBG");
                }
                ResultSet rs17 = st20.executeQuery("select sum(msure) AS \"saatGT\" from arkamesai where sicil='" + scl + "'and geneldurum='GENEL TATİL ÇALIŞMASI' and(ay='" + ay + "'and yil='" + yil + "')");
                if (rs17.next()) {
                    gtC = rs17.getDouble("saatGT");
                }
                //puantaj üzerinde işlemler (bts)
                int son = 0;
                if (ay == 2 && yil % 4 == 0) {
                    son = 30;
                } else if (ay == 2 && yil % 4 != 0) {
                    son = 29;
                } else if (ay == 4 || ay == 6 || ay == 9 || ay == 11) {
                    son = 31;
                } else if (ay == 1 || ay == 3 || ay == 5 || ay == 7 || ay == 8 || ay == 10 || ay == 12) {
                    son = 32;
                }
                for (int i = 1; i < son; i++) {
                    String j = String.valueOf(i);
                    String gun = "g" + j;//g1,g2,g3..
                    ResultSet rs4 = st4.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and " + gun + "='X'");
                    if (rs4.next()) {
                        int a = rs4.getInt("toplam");
                        sayac += a;
                    }
                    ResultSet rs8 = st11.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and " + gun + "='Üİ'");
                    if (rs8.next()) {
                        int a = rs8.getInt("toplam");
                        ücMazIz += a;
                    }
                    ResultSet rs9 = st12.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and " + gun + "='ÜZİ' ");
                    if (rs9.next()) {
                        int a = rs9.getInt("toplam");
                        ücSMazIz += a;
                    }
                    ResultSet rs10 = st13.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and (" + gun + "='R' or " + gun + "='S') ");
                    if (rs10.next()) {
                        int a = rs10.getInt("toplam");
                        sihhiIz += a;
                    }
                    ResultSet rs11 = st14.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and " + gun + "='Yİ' ");
                    if (rs11.next()) {
                        int a = rs11.getInt("toplam");
                        yillikIz += a;
                    }
                    ResultSet rs12 = st15.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and (" + gun + "='E' or " + gun + "='G')");
                    if (rs12.next()) {
                        int a = rs12.getInt("toplam");
                        geg += a;
                    }
                    ResultSet rs13 = st16.executeQuery("select count(*) AS \"toplam\" from gecicitakvim where sicil='" + scl + "' and " + gun + "='A'");
                    if (rs13.next()) {
                        int a = rs13.getInt("toplam");
                        alti += a;
                    }
                }

                dtm2.addRow(new Object[]{sayac, "", "", ücMazIz, ücSMazIz, sihhiIz, yillikIz, sayac, sayac, sayac, "", "", geg, alti, "", mS, htFC, bgC, gtC});//çalışılan gün sayısı (toplam X) bitis.. 

            }
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat preformat=job.defaultPage();
        preformat.setOrientation(PageFormat.LANDSCAPE);
        PageFormat postFormat=job.pageDialog(preformat);
        job.setJobName("Printer ");
        job.setPrintable(new Printable() {
            public int print(Graphics pg, PageFormat pf, int pageNum) {
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.35, 0.35);
                jPanel1.paint(g2);
                return Printable.PAGE_EXISTS;
            }
        });
        boolean ok = job.printDialog();
        if (ok) {
            try {
                job.print();
            } catch (PrinterException ex) {
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public boolean isCellEditable(int row, int column) {
        return false;
    }//tablo üzerindeki mouse hareketi henüz kullanamadık..

    static public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int col, int row) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, 0, 0);

            return this;
        }
    }

    class CustomRenderer extends DefaultTableCellRenderer { //Şartlı hücre renklendirme..

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            String str = (String) jTable1.getModel().getValueAt(row, column);
            Font f2 = new Font("Tahoma", Font.BOLD, 9);
            if (str.toString().equals("HT") || str.toString().equals("BT") || str.toString().equals("GT")) {
                c.setFont(f2);
                c.setBackground(Color.LIGHT_GRAY);
            } else {
                c.setBackground(Color.white);

            }
            if (isSelected) {
                c.setBackground(Color.getHSBColor(255, 250, 240));
            }
            return this;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(puantj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(puantj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(puantj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(puantj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new puantj().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton geri;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField tarih;
    // End of variables declaration//GEN-END:variables
}
